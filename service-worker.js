"use strict";var precacheConfig=[["/index.html","4b7aac624e5f284b25bd30b4da7ea429"],["/static/css/main.11e46163.css","5fbd213747ec55e2baef4b9c7b36e6a6"],["/static/js/main.8e318721.js","3e105306c62202b62eac70be19b9cc13"],["/static/media/112.3dac44ae.png","3dac44ae6ca68ff2c3efd5179112c0a7"],["/static/media/brain.0567369f.png","0567369f07f5db6b300d002ffe79719b"],["/static/media/campus.5f620837.svg","5f620837ac4051caf76e432c93b3d26f"],["/static/media/campuses.9b370ff1.png","9b370ff1fa103a81dfeb9da336b0fe80"],["/static/media/hand.813a29ea.svg","813a29ea17fb96a06e0daf8a224b8f95"],["/static/media/lightsaber.9c16fbf4.png","9c16fbf48f21717e5baf8a2cf8157e01"],["/static/media/magnet.575a0fbd.png","575a0fbdeb6513fba2325d6ed2ba3c82"],["/static/media/megaphone.496182ee.svg","496182ee658c07af052bda2efbc97b61"],["/static/media/mystery.08e06827.svg","08e0682713a8283b20e4275226e1c6f7"],["/static/media/nail-file.9f082338.png","9f08233809d4a485f0387aa73d27b223"],["/static/media/plastic-knife.fb5449f7.png","fb5449f75cade6f81fd47dc2d5086681"],["/static/media/protesters.e3ae3ee5.png","e3ae3ee59ea5953469649e5a7625535f"],["/static/media/public-figures.a2019a3a.png","a2019a3a055267204b8d83559648e113"],["/static/media/scissors.4610075b.png","4610075b9a8c245a6a799256fa588637"],["/static/media/stone.ccee5358.png","ccee535863c0a3c188522037388b059c"],["/static/media/subronium.741ce2ff.png","741ce2ff976f547ba87069a59cf36afe"],["/static/media/upgrade.91a010b2.svg","91a010b2fc0e91c8791a2dd4df838284"],["/static/media/wire-cutters.20dfd2ba.png","20dfd2ba61b88efe7283019744fa863f"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});